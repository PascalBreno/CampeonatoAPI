// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Entities.CampeonatoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("campeaoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("codigoCampeonato")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("dataFinal")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("dataInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("nome")
                        .HasColumnType("varchar(1000) CHARACTER SET utf8mb4")
                        .HasMaxLength(1000);

                    b.Property<Guid?>("terceiroId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("viciId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("campeaoId");

                    b.HasIndex("codigoCampeonato")
                        .IsUnique();

                    b.HasIndex("terceiroId");

                    b.HasIndex("viciId");

                    b.ToTable("Campeonato");
                });

            modelBuilder.Entity("Domain.Entities.PartidaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CampeonatoEntityId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("codigoCampeonato")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("data")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("golsA")
                        .HasColumnType("int");

                    b.Property<int>("golsB")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("timeAId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("timeBId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CampeonatoEntityId");

                    b.HasIndex("timeAId");

                    b.HasIndex("timeBId");

                    b.ToTable("Partida");
                });

            modelBuilder.Entity("Domain.Entities.PontuacaoCampeonatoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("codigoCampeonato")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("pontuacaoTime")
                        .HasColumnType("int");

                    b.Property<Guid?>("timeId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("timeId");

                    b.ToTable("PontuacaoCampeonato");
                });

            modelBuilder.Entity("Domain.Entities.TimeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("sigla")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("sigla")
                        .IsUnique();

                    b.ToTable("Time");

                    b.HasData(
                        new
                        {
                            Id = new Guid("115a2a89-2fed-413d-a09e-dec1fc266f00"),
                            CreateAt = new DateTime(2020, 7, 18, 3, 7, 24, 520, DateTimeKind.Local).AddTicks(7116),
                            isDeleted = false,
                            nome = "Palmeiras",
                            sigla = "PLM"
                        },
                        new
                        {
                            Id = new Guid("863b8bca-9b54-4e94-bd58-453ef68293cf"),
                            CreateAt = new DateTime(2020, 7, 18, 3, 7, 24, 522, DateTimeKind.Local).AddTicks(7970),
                            isDeleted = false,
                            nome = "São Paulo",
                            sigla = "SP"
                        },
                        new
                        {
                            Id = new Guid("547cc278-a37b-4e8a-a5c5-22db1f35584f"),
                            CreateAt = new DateTime(2020, 7, 18, 3, 7, 24, 522, DateTimeKind.Local).AddTicks(8075),
                            isDeleted = false,
                            nome = "Flamento",
                            sigla = "FLM"
                        },
                        new
                        {
                            Id = new Guid("76073bbd-5e08-4e24-9191-ee6c6d7762d8"),
                            CreateAt = new DateTime(2020, 7, 18, 3, 7, 24, 522, DateTimeKind.Local).AddTicks(8083),
                            isDeleted = false,
                            nome = "Bota Fogo",
                            sigla = "BTF"
                        },
                        new
                        {
                            Id = new Guid("de2dd757-a014-4ebb-b84a-5df5104630df"),
                            CreateAt = new DateTime(2020, 7, 18, 3, 7, 24, 522, DateTimeKind.Local).AddTicks(8090),
                            isDeleted = false,
                            nome = "Grêmio",
                            sigla = "GRM"
                        });
                });

            modelBuilder.Entity("Domain.Entities.CampeonatoEntity", b =>
                {
                    b.HasOne("Domain.Entities.TimeEntity", "campeao")
                        .WithMany()
                        .HasForeignKey("campeaoId");

                    b.HasOne("Domain.Entities.TimeEntity", "terceiro")
                        .WithMany()
                        .HasForeignKey("terceiroId");

                    b.HasOne("Domain.Entities.TimeEntity", "vici")
                        .WithMany()
                        .HasForeignKey("viciId");
                });

            modelBuilder.Entity("Domain.Entities.PartidaEntity", b =>
                {
                    b.HasOne("Domain.Entities.CampeonatoEntity", null)
                        .WithMany("partidas")
                        .HasForeignKey("CampeonatoEntityId");

                    b.HasOne("Domain.Entities.TimeEntity", "timeA")
                        .WithMany()
                        .HasForeignKey("timeAId");

                    b.HasOne("Domain.Entities.TimeEntity", "timeB")
                        .WithMany()
                        .HasForeignKey("timeBId");
                });

            modelBuilder.Entity("Domain.Entities.PontuacaoCampeonatoEntity", b =>
                {
                    b.HasOne("Domain.Entities.TimeEntity", "time")
                        .WithMany()
                        .HasForeignKey("timeId");
                });
#pragma warning restore 612, 618
        }
    }
}
